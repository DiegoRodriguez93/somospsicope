{"version":3,"sources":["components/topNavigation.js","handler/comprobarLogIn.js","components/sideNavigation.js","components/Footer.js","components/DataTable.js","components/pages/DashboardPage.js","handler/capacitacionesHandler.js","handler/marcarPagoHandler.js","handler/eliminarInscriptoHandler.js","components/pages/LogInPage.js","components/ingresarKeyt.js","handler/ingresarKeyt.js","components/TextEditor.js","components/pages/Textos.js","handler/eliminarCategoria.js","components/IngresarProducto.js","handler/activarProductoHandler.js","components/pages/Productos.js","handler/eliminarProductoHandler.js","hooks/useFetch.js","components/IngresarFoto.js","components/IngresarCategoriaDeFoto.js","handler/eliminarFotoHandler.js","components/pages/GaleriaDeFotos.js","components/pages/NotFoundPage.js","App.js","registerServiceWorker.js","index.js"],"names":["TopNavigation","state","collapse","onClick","setState","toggle","dropdownOpen","className","light","expand","scrolling","href","this","isOpen","navbar","left","right","Component","comprobarLogIn","result","localStorage","getItem","history","useHistory","push","alt","src","exact","to","activeClassName","icon","clear","window","location","reload","Footer","color","Date","getFullYear","DataTable","url","thead","tableId","refreshID","useEffect","$","fn","isDataTable","$table","ajax","id","style","width","map","theadValue","DashboardPage","React","useState","setRefreshID","buttonHandler","ACTION","Swal","fire","title","showDenyButton","confirmButtonText","denyButtonText","then","isConfirmed","onBeforeOpen","showLoading","onAfterClose","hideLoading","allowOutsideClick","allowEscapeKey","allowEnterKey","showConfirmButton","Promise","resolve","reject","formData","FormData","append","fetch","method","body","response","json","catch","error","message","capacitacionesHandler","res","MarcarPago","marcarPagoHandler","eliminarInscripto","eliminarInscriptoHandler","md","LogInPage","useForm","handleSubmit","register","errors","console","log","onSubmit","data","e","user","pass","setItem","htmlFor","name","ref","required","type","IngresarKeyt","refresh","Fragment","keyt","value","target","reset","ingresarKeytHandler","Math","floor","random","customStyles","content","top","bottom","marginRight","transform","TextEditor","setIsOpenModal","editKeyt","modalIsOpen","setIsOpen","EditorState","createEmpty","editorState","setEditorState","closeModal","document","overflowY","getElementsByClassName","zIndex","createWithContent","ContentState","createFromBlockArray","convertFromHTML","draftToHtml","convertToRaw","getCurrentContent","onAfterOpen","querySelector","display","onRequestClose","contentLabel","wrapperClassName","editorClassName","onEditorStateChange","lg","sm","replaceAll","slice","setTimeout","Modal","setAppElement","Textos","Array","isOpenModal","setEditKeyt","eliminarCategoria","eliminarCategoriaHandler","IngresarProducto","nombre","descripcion","precio","imagen","price","Productos","editarProducto","key","URL","activarDesactivarProducto","confirm","activarProductoHandler","eliminarProducto","text","eliminarProductoHandler","useFetch","initialUrl","setData","loading","setLoading","setUrl","setReload","a","fetchUrl","IngresarFoto","categoria","image","IngresarCategoriaDeFoto","GaleriaDeFotos","eliminarFoto","eliminarFotoHandler","NotFoundPage","hieght","App","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","StrictMode","getElementById","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1bc4b672.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBIcon } from 'mdbreact';\n\nclass TopNavigation extends Component {\n    state = {\n        collapse: false\n    }\n\n    onClick = () => {\n        this.setState({\n            collapse: !this.state.collapse,\n        });\n    }\n\n    toggle = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    render() {\n        return (\n            <MDBNavbar className=\"flexible-navbar\" light expand=\"md\" scrolling>\n                <MDBNavbarBrand href=\"/\">\n                    <strong>SomosPsicope</strong>\n                </MDBNavbarBrand>\n                <MDBNavbarToggler onClick = { this.onClick } />\n                <MDBCollapse isOpen = { this.state.collapse } navbar>\n                    <MDBNavbarNav left>\n                    </MDBNavbarNav>\n                    <MDBNavbarNav right>\n                    </MDBNavbarNav>\n                </MDBCollapse>\n            </MDBNavbar>\n        );\n    }\n}\n\nexport default TopNavigation;","export default function comprobarLogIn() {\r\n\r\n  let result = true;\r\n\r\n  if (\r\n    localStorage.getItem(\"idUserAdmin\") !== 1 &&\r\n    localStorage.getItem(\"token\") !== \"041292200a64c28adcd1c66feac2cd2b\"\r\n  ) {\r\n    result = false;\r\n  }\r\n\r\n  return result;\r\n\r\n}\r\n","import React from 'react';\nimport { MDBListGroup, MDBListGroupItem, MDBIcon } from 'mdbreact';\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport comprobarLogIn from './../handler/comprobarLogIn'\n\n\nconst TopNavigation = () => {\n\n    let history = useHistory();\n\n        if(!comprobarLogIn()){\n            history.push('/admin');\n            return null;\n        }  \n\n    const cerrarSesionHander = () => {\n        localStorage.clear();\n        window.location.reload();\n    }\n\n\n    return (\n\n        <div className=\"sidebar-fixed position-fixed\">\n            <a href=\"#!\" className=\"logo-wrapper waves-effect\">\n                <img alt=\"MDB React Logo\" className=\"img-fluid\" src=\"https://demo.somospsicope.com/images/logo.png\" />\n            </a>\n            <MDBListGroup className=\"list-group-flush\">\n                <NavLink exact={true} to=\"/admin/capacitaciones\" activeClassName=\"activeClass\">\n                    <MDBListGroupItem>\n                        <MDBIcon icon=\"chart-pie\" className=\"mr-3\"/>\n                        Capacitaciones\n                    </MDBListGroupItem>\n                </NavLink>\n                <NavLink to=\"/admin/textos\" activeClassName=\"activeClass\">\n                    <MDBListGroupItem>\n                        <MDBIcon icon=\"user\" className=\"mr-3\"/>\n                        Textos\n                    </MDBListGroupItem>\n                </NavLink>\n                <NavLink to=\"/admin/productos\" activeClassName=\"activeClass\">\n                    <MDBListGroupItem>\n                        <MDBIcon icon=\"table\" className=\"mr-3\"/>\n                        Productos\n                    </MDBListGroupItem>\n                </NavLink>\n                <NavLink to=\"/admin/galeria-de-fotos\" activeClassName=\"activeClass\">\n                    <MDBListGroupItem>\n                        <MDBIcon icon=\"table\" className=\"mr-3\"/>\n                        Galería de Fotos\n                    </MDBListGroupItem>\n                </NavLink>\n{/*                 <NavLink to=\"/qrs\" activeClassName=\"activeClass\">\n                    <MDBListGroupItem>\n                        <MDBIcon icon=\"link\" className=\"mr-3\"/>\n                        Códigos QRs\n                    </MDBListGroupItem>\n                </NavLink> */}\n                <NavLink exact to=\"/admin\" onClick={cerrarSesionHander} activeClassName=\"activeClass\">\n                    <MDBListGroupItem>\n                        <MDBIcon icon=\"sign-out-alt\" className=\"mr-3\"/>\n                        Cerrar sesión\n                    </MDBListGroupItem>\n                </NavLink>\n            </MDBListGroup>\n        </div>\n    );\n}\n\nexport default TopNavigation;","import React from 'react';\nimport { MDBFooter } from 'mdbreact';\n\nconst Footer = () => {\n    return (\n        <MDBFooter color=\"blue\" className=\"text-center font-small darken-2\">\n            <p className=\"footer-copyright mb-0 py-3 text-center\">\n                &copy; {new Date().getFullYear()} Copyright: <a href=\"https://www.renoca.ml\"> Renoca.ml </a>\n            </p>\n        </MDBFooter>\n    );\n}\n\nexport default Footer;","import React, { useEffect } from \"react\";\r\nimport $ from 'jquery';\r\nimport 'datatables.net';\r\n\r\nexport default function DataTable({ url, thead, tableId, refreshID }) {\r\n\r\n/*     var tablee; */\r\n\r\n    useEffect(() => {\r\n\r\n        if (!$.fn.DataTable.isDataTable(`#${tableId}`)) {\r\n          window.$table = $('#'+tableId).DataTable({\r\n                ajax: {\r\n                    url: url\r\n                },\r\n                \"language\": {\r\n                    \"url\": \"//cdn.datatables.net/plug-ins/1.10.21/i18n/Spanish.json\"\r\n                }\r\n            });\r\n        } else {\r\n            window.$table.ajax.reload();\r\n        }\r\n    }, [refreshID]);\r\n\r\n    return (\r\n        <>\r\n            <table\r\n                id={tableId}\r\n                className=\"table dataTable no-footer\"\r\n                style={{ width: \"100%\" }}\r\n            >\r\n                <thead>\r\n                    <tr>\r\n                        {thead.map((theadValue) => (\r\n                            <th key={theadValue}>{theadValue}</th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody></tbody>\r\n            </table>\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\nimport DataTable from \"./../DataTable\";\nimport { MDBRow, MDBCol, MDBCard, MDBView, MDBCardBody } from \"mdbreact\";\nimport { capacitacionesHandler } from \"./../../handler/capacitacionesHandler\";\nimport { marcarPagoHandler } from \"./../../handler/marcarPagoHandler\";\nimport { eliminarInscriptoHandler } from \"./../../handler/eliminarInscriptoHandler\";\nimport Swal from \"sweetalert2\";\n\nconst DashboardPage = () => {\n  const thead = [\"Nombre\", \"Email\", \"Pago\", \"Fecha inscripción\", \"Eliminar\"];\n  const [refreshID, setRefreshID] = React.useState(0);\n\n  const buttonHandler = (ACTION) => {\n    Swal.fire({\n      title: `Esta seguro que quiere realizar esta acción?`,\n      showDenyButton: true,\n      confirmButtonText: `SI`,\n      denyButtonText: `NO`,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire({\n          title: \"Espere por favor ...\",\n          onBeforeOpen() {\n            Swal.showLoading();\n          },\n          onAfterClose() {\n            Swal.hideLoading();\n          },\n          allowOutsideClick: false,\n          allowEscapeKey: false,\n          allowEnterKey: false,\n          showConfirmButton: false,\n        });\n\n        capacitacionesHandler(ACTION).then((res) => {\n          if (res) {\n            setRefreshID(refreshID + 1);\n          }\n        });\n      }\n    });\n  };\n\n  window.MarcarPago = (id) => {\n    marcarPagoHandler(id).then((res) => {\n      if (res) {\n        setRefreshID(refreshID + 1);\n      }\n    });\n  };\n\n  window.eliminarInscripto = (id) => {\n    eliminarInscriptoHandler(id).then((res) => {\n      if (res) {\n        setRefreshID(refreshID + 1);\n      }\n    });\n  };\n\n  return (\n    <>\n      <MDBRow>\n        <MDBCol md=\"8\">\n          <button\n            onClick={() => {\n              buttonHandler(\"DELETE_ALL\");\n            }}\n            className=\"btn btn-danger\"\n          >\n            Eliminar Todos\n          </button>\n          <button\n            onClick={() => {\n              buttonHandler(\"MARCAR_ABIERTO_CAPACITACION\");\n            }}\n            className=\"btn btn-primary\"\n          >\n            Marcar como abierto\n          </button>\n          <button\n            onClick={() => {\n              buttonHandler(\"MARCAR_CERRADO_CAPACITACION\");\n            }}\n            className=\"btn btn-secondary\"\n          >\n            Marcar como finalizado\n          </button>\n          <button\n            onClick={() => {\n              buttonHandler(\"MARCAR_ABIERTO_INSCRIPCION\");\n            }}\n            className=\"btn btn-success\"\n          >\n            Abrir inscripciones\n          </button>\n          <button\n            onClick={() => {\n              buttonHandler(\"MARCAR_CERRADO_INSCRIPCION\");\n            }}\n            className=\"btn btn-warning\"\n          >\n            Cerrar inscripciones\n          </button>\n        </MDBCol>\n        <MDBCol md=\"12\">\n          <MDBCard className=\"mt-5\">\n            <MDBView className=\"gradient-card-header blue darken-2\">\n              <h4 className=\"h4-responsive text-white\">\n                Inscriptos en capacitaciones.\n              </h4>\n            </MDBView>\n            <MDBCardBody>\n              <DataTable\n                url=\"https://somospsicope.com/api/capacitaciones/listarCapacitaciones.php\"\n                thead={thead}\n                tableId=\"CapacitacionesTable\"\n                refreshID={refreshID}\n              />\n            </MDBCardBody>\n          </MDBCard>\n        </MDBCol>\n      </MDBRow>\n    </>\n  );\n};\n\nexport default DashboardPage;\n","import Swal from 'sweetalert2';\r\nexport const capacitacionesHandler = (ACTION) => {\r\n\r\n    return new Promise ((resolve, reject) => {\r\n\r\n        let formData = new FormData();\r\n    \r\n        formData.append('action', ACTION);\r\n    \r\n        fetch('https://somospsicope.com/api/capacitaciones/handler.php', {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => {\r\n                Swal.fire('Error!', error, 'error')\r\n                reject(false);\r\n            })\r\n            .then(({ result, message }) => {\r\n                if (result) {\r\n                    Swal.fire('Correcto!', message, 'success');\r\n                    resolve(true);\r\n                } else {\r\n                    Swal.fire('Error!', message, 'error');\r\n                }\r\n            });\r\n    })\r\n\r\n\r\n}","import Swal from 'sweetalert2';\r\n\r\nexport const marcarPagoHandler = (id) => {\r\n\r\n    Swal.fire({\r\n        title: \"Espere por favor ...\",\r\n        onBeforeOpen() {\r\n          Swal.showLoading();\r\n        },\r\n        onAfterClose() {\r\n          Swal.hideLoading();\r\n        },\r\n        allowOutsideClick: false,\r\n        allowEscapeKey: false,\r\n        allowEnterKey: false,\r\n        showConfirmButton: false,\r\n      });\r\n\r\n    return new Promise ((resolve, reject) => {\r\n\r\n        let formData = new FormData();\r\n    \r\n        formData.append('id', id);\r\n    \r\n        fetch('https://somospsicope.com/api/capacitaciones/marcarPago.php', {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => {\r\n                Swal.fire('Error!', error, 'error')\r\n                reject(false);\r\n            })\r\n            .then(({ result, message }) => {\r\n                if (result) {\r\n                    Swal.fire('Correcto!', message, 'success');\r\n                    resolve(true);\r\n                } else {\r\n                    Swal.fire('Error!', message, 'error');\r\n                }\r\n            });\r\n    })\r\n\r\n\r\n}","import Swal from 'sweetalert2';\r\n\r\nexport const eliminarInscriptoHandler = (id) => {\r\n\r\n    Swal.fire({\r\n        title: \"Espere por favor ...\",\r\n        onBeforeOpen() {\r\n          Swal.showLoading();\r\n        },\r\n        onAfterClose() {\r\n          Swal.hideLoading();\r\n        },\r\n        allowOutsideClick: false,\r\n        allowEscapeKey: false,\r\n        allowEnterKey: false,\r\n        showConfirmButton: false,\r\n      });\r\n\r\n    return new Promise ((resolve, reject) => {\r\n\r\n        let formData = new FormData();\r\n    \r\n        formData.append('id', id);\r\n    \r\n        fetch('https://somospsicope.com/api/capacitaciones/eliminarInscripto.php', {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => {\r\n                Swal.fire('Error!', error, 'error')\r\n                reject(false);\r\n            })\r\n            .then(({ result, message }) => {\r\n                if (result) {\r\n                    Swal.fire('Correcto!', message, 'success');\r\n                    resolve(true);\r\n                } else {\r\n                    Swal.fire('Error!', message, 'error');\r\n                }\r\n            });\r\n    })\r\n\r\n\r\n}","import React from \"react\";\nimport { MDBRow, MDBCol, MDBCard, MDBView, MDBCardBody } from \"mdbreact\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport comprobarLogIn from './../../handler/comprobarLogIn'\n\nimport Swal from \"sweetalert2\";\n\nconst LogInPage = () => {\n  const { handleSubmit, register, errors } = useForm();\n  let history = useHistory();\n  const onSubmit = (data, e) => {\n    if (data.user === \"somospsicopeadmin\" && data.pass === \"Argentina161803\") {\n      localStorage.setItem(\"idUserAdmin\", 1);\n      localStorage.setItem(\"token\", \"041292200a64c28adcd1c66feac2cd2b\");\n      window.location.reload();\n    } else {\n      Swal.fire(\"Error!\", \"Usuario o contraseña incorrectos\", \"error\");\n    }\n  };\n\n  \n  console.log(\"🚀 ~ file: LogInPage.js ~ line 25 ~ LogInPage ~ comprobarLogIn\", comprobarLogIn)\n\n  if(comprobarLogIn()){\n    history.push(\"/admin/capacitaciones\");\n  }\n\n  return (\n    <MDBRow>\n      <MDBCol md=\"4\"></MDBCol>\n      <MDBCol md=\"4\">\n        <MDBCard className=\"mt-5\">\n          <MDBView className=\"gradient-card-header blue darken-2\">\n            <h4 className=\"h4-responsive text-white\">Iniciar sesión</h4>\n          </MDBView>\n          <MDBCardBody>\n            <form className=\"qr-form\" onSubmit={handleSubmit(onSubmit)}>\n              <label htmlFor=\"user\">Usuario</label>\n              <input\n                name=\"user\"\n                className=\"form-control\"\n                ref={register({\n                  required: \"Requerido\",\n                })}\n              />\n              <span>{errors.user && errors.user.message}</span>\n              <label htmlFor=\"pass\">Contraseña</label>\n              <input\n                name=\"pass\"\n                className=\"form-control\"\n                type=\"password\"\n                ref={register({\n                  required: \"Requerido\",\n                })}\n              />\n              <span>{errors.pass && errors.pass.message}</span>\n              <div className=\"text-center\">\n                <button className=\"btn btn-primary\" type=\"submit\">\n                  Ingresar\n                </button>\n              </div>\n            </form>\n          </MDBCardBody>\n        </MDBCard>\n      </MDBCol>\n      <MDBCol md=\"4\"></MDBCol>\n    </MDBRow>\n  );\n};\n\nexport default LogInPage;\n","import React from 'react'\r\nimport {  MDBView, MDBCard, MDBCardBody } from 'mdbreact';\r\nimport { useForm } from \"react-hook-form\";\r\nimport {ingresarKeytHandler} from '../handler/ingresarKeyt';\r\n\r\nexport default function IngresarKeyt({refresh}) {\r\n\r\n    const { handleSubmit, register, errors } = useForm();\r\n    const onSubmit = (data, e) => {\r\n        ingresarKeytHandler(data, e)\r\n        .then(res => {\r\n            if(res){\r\n                refresh(Math.floor(Math.random() * 3000) + 1);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (<React.Fragment>\r\n\r\n        <MDBCard className=\"mt-5\">\r\n            <MDBView className=\"gradient-card-header blue darken-2\">\r\n                <h4 className=\"h4-responsive text-white\">Ingresar Keyt</h4>\r\n            </MDBView>\r\n            <MDBCardBody>\r\n            <form className=\"qr-form\" onSubmit={handleSubmit(onSubmit)}>\r\n                <label htmlFor=\"keyt\">Keyt</label>\r\n                <input\r\n                    name=\"keyt\"\r\n                    className=\"form-control\"\r\n                    ref={register({\r\n                    required: \"Required\",\r\n                    })}\r\n                />\r\n                <label htmlFor=\"value\">Value</label>\r\n                <input\r\n                    name=\"value\"\r\n                    className=\"form-control\"\r\n                    ref={register({\r\n                    required: \"Required\",\r\n                    })}\r\n                />\r\n                <span>{errors.name && errors.name.message}</span>\r\n                        <div className=\"text-center\">\r\n                            <button className=\"btn btn-primary\" type=\"submit\">Ingresar</button>\r\n                        </div>\r\n            </form>\r\n            </MDBCardBody>\r\n        </MDBCard>\r\n\r\n    </React.Fragment>)\r\n\r\n}","import Swal from 'sweetalert2';\r\n\r\nexport const ingresarKeytHandler = ({ keyt, value }, e) => {\r\n\r\n    return new Promise ((resolve, reject) => {\r\n\r\n        let formData = new FormData();\r\n    \r\n        formData.append('keyt', keyt);\r\n        formData.append('value', value);\r\n    \r\n        fetch('https://somospsicope.com/api/keyt/ingresarKeyt.php', {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => {\r\n                Swal.fire('Error!', error, 'error')\r\n                reject(false);\r\n            })\r\n            .then(({ result, message }) => {\r\n                if (result) {\r\n                    Swal.fire('Correcto!', message, 'success');\r\n                    e.target.reset();\r\n                    resolve(true);\r\n                } else {\r\n                    Swal.fire('Error!', message, 'error');\r\n                }\r\n            });\r\n    })\r\n\r\n\r\n}","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport {\r\n  EditorState,\r\n  convertToRaw,\r\n  ContentState,\r\n  convertFromHTML,\r\n} from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\n/* import htmlToDraft from \"html-to-draftjs\"; */\r\nimport \"./../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport { MDBCol, MDBRow } from \"mdbreact\";\r\nimport Swal from 'sweetalert2';\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nexport default function TextEditor({ setIsOpenModal, editKeyt }) {\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n  const [editorState, setEditorState] = React.useState(\r\n    EditorState.createEmpty()\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    setIsOpenModal && openModal();\r\n    setEditorState(\r\n      EditorState.createWithContent(\r\n        ContentState.createFromBlockArray(\r\n          convertFromHTML(`<p>${editKeyt.value}</p>`)\r\n        )\r\n      )\r\n    );\r\n  }, [setIsOpenModal, editKeyt]);\r\n\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function afterOpenModal() {\r\n    document.body.style.overflowY = \"hidden\";\r\n    document.querySelector('div[title=\"Superscript\"]').style.display = 'none';\r\n    document.querySelector('div[title=\"Subscript\"]').style.display = 'none';\r\n    document.querySelector('div[title=\"Embedded\"]').style.display = 'none'; \r\n    document.querySelector('div[title=\"Emoji\"]').style.display = 'none'; \r\n    document.querySelector('div[title=\"Image\"]').style.display = 'none'; \r\n    document.querySelector('div[title=\"Remove\"]').style.display = 'none'; \r\n    document.querySelector('div[title=\"Right\"]').style.display = 'none'; \r\n    document.querySelector('div[title=\"Left\"]').style.display = 'none'; \r\n    document.querySelector('div[title=\"Center\"]').style.display = 'none'; \r\n    document.querySelector('div[title=\"Justify\"]').style.display = 'none'; \r\n    document.getElementsByClassName(\"rdw-dropdown-wrapper\")[0].style.display = 'none';\r\n    document.getElementsByClassName(\"rdw-dropdown-wrapper\")[1].style.display = 'none';\r\n    document.getElementsByClassName(\"rdw-dropdown-wrapper\")[2].style.display = 'none';\r\n    document.getElementsByClassName(\"sidebar-fixed\")[0].style.zIndex = 0;\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n    document.body.style.overflowY = \"scroll\";\r\n    document.getElementsByClassName(\"sidebar-fixed\")[0].style.zIndex = 1050;\r\n  }\r\n\r\n  function editarHandler() {\r\n\r\n      Swal.fire({\r\n        title: 'Editando ...',\r\n        onBeforeOpen () {\r\n          Swal.showLoading ()\r\n        },\r\n        onAfterClose () {\r\n          Swal.hideLoading()\r\n        },\r\n        allowOutsideClick: false,\r\n        allowEscapeKey: false,\r\n        allowEnterKey: false,\r\n        showConfirmButton: false\r\n      });\r\n\r\n      let value = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n      value = value.replaceAll('<p>', '');\r\n      value = value.replaceAll('</p>', '<br>');\r\n      value = value.slice(0, -5);\r\n\r\n      let formData = new FormData();\r\n  \r\n      formData.append(\"value\", value);\r\n      formData.append(\"id\", editKeyt.id);\r\n  \r\n      fetch(editKeyt.url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      })\r\n        .then((response) => response.json())\r\n        .then((res) => {\r\n          setTimeout(()=>{Swal.fire('Correcto!', 'Valor editado correctamente!', 'success');},300);\r\n          closeModal();\r\n          //window.refreshTextTable = Math.floor(Math.random() * 1000);\r\n          setTimeout(()=>{window.location.reload();},2500);\r\n\r\n        })\r\n        .catch((error) => Swal.fire('Error!', 'Ha ocurrido un error, intente más tarde!', 'error'))\r\n        ;\r\n  }\r\n\r\n  console.log(draftToHtml(convertToRaw(editorState.getCurrentContent())));\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onAfterOpen={afterOpenModal}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n        <div>\r\n          <Editor\r\n            editorState={editorState}\r\n            wrapperClassName=\"demo-wrapper\"\r\n            editorClassName=\"demo-editor\"\r\n            onEditorStateChange={(editorState) => setEditorState(editorState)}\r\n          />\r\n          <MDBRow>\r\n            <MDBCol lg=\"6\" sm=\"6\">\r\n              <button onClick={closeModal} className=\"btn btn-block btn-danger\">Cancelar</button>\r\n            </MDBCol>\r\n            <MDBCol lg=\"6\" sm=\"6\">\r\n              <button onClick={editarHandler} className=\"btn btn-block btn-success\">Editar</button>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </div>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { MDBRow, MDBCol, MDBView, MDBCard, MDBCardBody } from \"mdbreact\";\nimport DataTable from \"../DataTable\";\nimport { eliminarCategoriaHandler } from \"../../handler/eliminarCategoria\";\nimport IngresarKeyt from \"./../ingresarKeyt\";\nimport TextEditor from \"./../TextEditor\";\n\nconst Textos = () => {\n  const thead = new Array(\"keyt\", \"Value\", \"Editar\");\n\n  const [refreshID, setRefreshID] = React.useState(0);\n  const [isOpenModal, setIsOpenModal] = React.useState(false);\n  const [editKeyt, setEditKeyt] = React.useState({\n    id: null,\n    value: \"\",\n    url: \"\",\n  });\n\n  window.eliminarCategoria = (id) => {\n    eliminarCategoriaHandler(id).then((res) => {\n      if (res) {\n        setRefreshID(refreshID + 1);\n      }\n    });\n  };\n\n  window.editKeyt = (id, value) => {\n    setIsOpenModal(true);\n    const URL = \"https://somospsicope.com/api/keyt/editarKeyt.php\";\n    setEditKeyt({\n      id,\n      value,\n      url: URL,\n    });\n    setTimeout(() => {\n      setIsOpenModal(false);\n    }, 1500);\n  };\n\n  /*   React.useEffect(()=>{\n    if(typeof window.refreshTextTable === 'number'){\n      setRefreshID(refreshID + 1);\n    }\n  },\n  [window.refreshTextTable]) */\n\n  return (\n    <>\n      <TextEditor setIsOpenModal={isOpenModal} editKeyt={editKeyt} />\n      <MDBRow>\n        <MDBCol md=\"4\">\n          <IngresarKeyt refresh={setRefreshID} />\n        </MDBCol>\n        <MDBCol md=\"12\">\n          <MDBCard className=\"mt-5\">\n            <MDBView className=\"gradient-card-header blue darken-2\">\n              <h4 className=\"h4-responsive text-white\">Textos</h4>\n            </MDBView>\n            <MDBCardBody>\n              <DataTable\n                url=\"https://somospsicope.com/api/keyt/listarKeyt.php\"\n                thead={thead}\n                tableId=\"CategoriasTable\"\n                refreshID={refreshID}\n              />\n            </MDBCardBody>\n          </MDBCard>\n        </MDBCol>\n      </MDBRow>\n    </>\n  );\n};\n\nexport default Textos;\n","import Swal from 'sweetalert2';\r\n\r\nexport const eliminarCategoriaHandler = (id) => {\r\n\r\n    Swal.fire({\r\n        title: \"Espere por favor ...\",\r\n        onBeforeOpen() {\r\n          Swal.showLoading();\r\n        },\r\n        onAfterClose() {\r\n          Swal.hideLoading();\r\n        },\r\n        allowOutsideClick: false,\r\n        allowEscapeKey: false,\r\n        allowEnterKey: false,\r\n        showConfirmButton: false,\r\n      });\r\n\r\n    return new Promise ((resolve, reject) => {\r\n\r\n        let formData = new FormData();\r\n    \r\n        formData.append('id', id);\r\n    \r\n        fetch('https://somospsicope.com/api/categorias/eliminarCategoria.php', {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => {\r\n                Swal.fire('Error!', error, 'error')\r\n                reject(false);\r\n            })\r\n            .then(({ result, message }) => {\r\n                if (result) {\r\n                    Swal.fire('Correcto!', message, 'success');\r\n                    resolve(true);\r\n                } else {\r\n                    Swal.fire('Error!', message, 'error');\r\n                }\r\n            });\r\n    })\r\n\r\n\r\n}","import React from \"react\";\r\nimport { MDBView, MDBCard, MDBCardBody } from \"mdbreact\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default function IngresarProducto() {\r\n  const { handleSubmit, register, errors } = useForm();\r\n  const onSubmit = (data) => {\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"nombre\", data.nombre);\r\n    formData.append(\"descripcion\", data.descripcion);\r\n    formData.append(\"precio\", data.precio);\r\n    formData.append(\"imagen\", data.imagen[0]);\r\n\r\n    Swal.fire({\r\n      title: \"Subiendo Producto ...\",\r\n      onBeforeOpen() {\r\n        Swal.showLoading();\r\n      },\r\n      onAfterClose() {\r\n        Swal.hideLoading();\r\n      },\r\n      allowOutsideClick: false,\r\n      allowEscapeKey: false,\r\n      allowEnterKey: false,\r\n      showConfirmButton: false,\r\n    });\r\n\r\n    fetch(\"https://somospsicope.com/api/productos/ingresarProducto.php\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    })\r\n      .then((response) => response.json())\r\n      .catch((error) => {\r\n        Swal.fire(\"Error!\", error, \"error\");\r\n      })\r\n      .then(({ result, message }) => {\r\n        if (result) {\r\n          Swal.fire(\"Correcto!\", message, \"success\");\r\n          window.location.reload();\r\n        } else {\r\n          Swal.fire(\"Error!\", message, \"error\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MDBCard className=\"mt-5\">\r\n        <MDBView className=\"gradient-card-header blue darken-2\">\r\n          <h4 className=\"h4-responsive text-white\">Ingresar productos</h4>\r\n        </MDBView>\r\n        <MDBCardBody>\r\n          <form className=\"qr-form\" onSubmit={handleSubmit(onSubmit)}>\r\n            <label htmlFor=\"nombre\">Nombre</label>\r\n            <input\r\n              name=\"nombre\"\r\n              className=\"form-control\"\r\n              ref={register({\r\n                required: \"Requerido\",\r\n              })}\r\n            />\r\n            <span>{errors.nombre && errors.nombre.message}</span>\r\n            <label htmlFor=\"descripcion\">Descripción</label>\r\n            <textarea\r\n              name=\"descripcion\"\r\n              className=\"form-control\"\r\n              ref={register({\r\n                required: \"Requerido\",\r\n              })}\r\n            />\r\n            <span>{errors.descripcion && errors.descripcion.message}</span>\r\n            <label htmlFor=\"precio\">Precio</label>\r\n            <input\r\n              name=\"precio\"\r\n              className=\"form-control\"\r\n              ref={register({\r\n                required: \"Requerido\",\r\n              })}\r\n            />\r\n            <span>{errors.price && errors.price.message}</span>\r\n            <label htmlFor=\"image\">Imagen</label>\r\n            <input\r\n              name=\"imagen\"\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              ref={register({\r\n                required: \"Requerido\",\r\n              })}\r\n            />\r\n            <span>{errors.imagen && errors.imagen.message}</span>\r\n\r\n            <div className=\"text-center\">\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Ingresar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import Swal from 'sweetalert2';\r\n\r\nexport const activarProductoHandler = (id, value) => {\r\n\r\n    Swal.fire({\r\n        title: \"Espere por favor ...\",\r\n        onBeforeOpen() {\r\n          Swal.showLoading();\r\n        },\r\n        onAfterClose() {\r\n          Swal.hideLoading();\r\n        },\r\n        allowOutsideClick: false,\r\n        allowEscapeKey: false,\r\n        allowEnterKey: false,\r\n        showConfirmButton: false,\r\n      });\r\n\r\n    return new Promise ((resolve, reject) => {\r\n\r\n        let formData = new FormData();\r\n    \r\n        formData.append('id', id);\r\n        formData.append('value', value);\r\n    \r\n        fetch('https://somospsicope.com/api/productos/activarDesactivarProducto.php', {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => {\r\n                Swal.fire('Error!', error, 'error')\r\n                reject(false);\r\n            })\r\n            .then(({ result, message }) => {\r\n                if (result) {\r\n                    Swal.fire('Correcto!', message, 'success');\r\n                    resolve(true);\r\n                } else {\r\n                    Swal.fire('Error!', message, 'error');\r\n                }\r\n            });\r\n    })\r\n\r\n\r\n}","import React from \"react\";\nimport { MDBRow, MDBCol, MDBView, MDBCard, MDBCardBody } from \"mdbreact\";\nimport DataTable from \"./../DataTable\";\nimport IngresarProducto from \"./../IngresarProducto\";\nimport TextEditor from \"./../TextEditor\";\nimport { activarProductoHandler } from './../../handler/activarProductoHandler';\nimport { eliminarProductoHandler } from './../../handler/eliminarProductoHandler';\nimport Swal from 'sweetalert2';\n\nconst Productos = () => {\n  const thead = new Array(\n    \"Nombre\",\n    \"Descripción\",\n    \"Objetivos\",\n    \"Que incluye\",\n    \"Precio\",\n    \"Url Imagen\",\n    \"Activo\",\n    \"Eliminar\"\n  );\n\n  const [refreshID, setRefreshID] = React.useState(0);\n  const [isOpenModal, setIsOpenModal] = React.useState(false);\n  const [editKeyt, setEditKeyt] = React.useState({\n    id: null,\n    value: \"\",\n    url: \"\"\n  });\n\n  window.editarProducto = (id, value, key) => {\n    setIsOpenModal(true);\n    const URL = `https://somospsicope.com/api/productos/editarProducto.php?key=${key}`;\n    setEditKeyt({\n      id,\n      value,\n      url: URL,\n    });\n    setTimeout(() => {\n      setIsOpenModal(false);\n    }, 1500);\n  };\n\n  window.activarDesactivarProducto = (id, value) => {\n\n    let title = 'Seguro que desea desactivar el producto';\n    let confirm = 'Desactivar';\n\n    if(value === 1){\n       title = 'Seguro que desea activar el producto';\n       confirm = 'Activar';\n    }\n\n    Swal.fire({\n      title: title,\n      showDenyButton: true,\n      confirmButtonText: confirm,\n      denyButtonText: `Cancelar`,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        activarProductoHandler(id, value).then((res) => {\n          if(res){\n            setRefreshID(refreshID + 1);\n          }\n        });\n      }\n    })\n\n  };\n\n  window.eliminarProducto = (id) => {\n\n    Swal.fire({\n      title: 'Seguro que desea eliminar el producto?',\n      text: 'La acción no se puede revertir!!',\n      showDenyButton: true,\n      confirmButtonText: 'Eliminar',\n      denyButtonText: `Cancelar`,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        eliminarProductoHandler(id).then((res) => {\n          if(res){\n            setRefreshID(refreshID + 1);\n          }\n        });\n      }\n    })\n\n  }\n\n  return (\n    <>\n      <TextEditor setIsOpenModal={isOpenModal} editKeyt={editKeyt} />\n      <MDBRow>\n        <MDBCol md=\"4\">\n          <IngresarProducto />\n        </MDBCol>\n        <MDBCol md=\"4\">\n          <MDBCard className=\"mt-5\">\n            <MDBView className=\"gradient-card-header blue darken-2\">\n              <h4 className=\"h4-responsive text-white\">Notas</h4>\n            </MDBView>\n            <MDBCardBody>\n              <ul>\n                <li>Los productos se suben por defecto desactivados.</li>\n                <li>\n                  Las imagenes deben ser cuadras mismo alto que largo y en lo\n                  posible mayores a 800x800px.\n                </li>\n                <li>\n                  Que incluye y los objetivos se agregan después de subir el\n                  producto, si no se agregan no se muestran en la página.\n                </li>\n              </ul>\n            </MDBCardBody>\n          </MDBCard>\n        </MDBCol>\n        <MDBCol md=\"12\">\n          <MDBCard className=\"mt-5\">\n            <MDBView className=\"gradient-card-header blue darken-2\">\n              <h4 className=\"h4-responsive text-white\">Productos</h4>\n            </MDBView>\n            <MDBCardBody>\n              <DataTable\n                url=\"https://somospsicope.com/api/productos/listarProductos.php\"\n                thead={thead}\n                tableId=\"ProductosTable\"\n                refreshID={refreshID}\n              />\n            </MDBCardBody>\n          </MDBCard>\n        </MDBCol>\n      </MDBRow>\n    </>\n  );\n};\n\nexport default Productos;\n","import Swal from 'sweetalert2';\r\n\r\nexport const eliminarProductoHandler = (id, value) => {\r\n\r\n    Swal.fire({\r\n        title: \"Espere por favor ...\",\r\n        onBeforeOpen() {\r\n          Swal.showLoading();\r\n        },\r\n        onAfterClose() {\r\n          Swal.hideLoading();\r\n        },\r\n        allowOutsideClick: false,\r\n        allowEscapeKey: false,\r\n        allowEnterKey: false,\r\n        showConfirmButton: false,\r\n      });\r\n\r\n    return new Promise ((resolve, reject) => {\r\n\r\n        let formData = new FormData();\r\n    \r\n        formData.append('id', id);\r\n    \r\n        fetch('https://somospsicope.com/api/productos/eliminarProducto.php', {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => {\r\n                Swal.fire('Error!', error, 'error')\r\n                reject(false);\r\n            })\r\n            .then(({ result, message }) => {\r\n                if (result) {\r\n                    Swal.fire('Correcto!', message, 'success');\r\n                    resolve(true);\r\n                } else {\r\n                    Swal.fire('Error!', message, 'error');\r\n                }\r\n            });\r\n    })\r\n\r\n\r\n}","import React,{useEffect, useState} from 'react';\r\n/* import axios from 'axios'; */\r\n\r\nexport default function useFetch( initialUrl ){\r\n\r\n    const [ data, setData]          = useState({});\r\n    const [ loading, setLoading]    = useState(true);\r\n    const [ url, setUrl ]           = useState(initialUrl);\r\n    const [ reload, setReload ]     = useState(0);\r\n\r\n    async function fetchUrl(){\r\n\r\n        /* const response = await axios(url); */\r\n\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setData(data);\r\n            setLoading(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect( () => {\r\n        fetchUrl();\r\n    }, [reload, url])\r\n\r\n    return [data, loading, setUrl, reload, setReload];\r\n\r\n}","import React from \"react\";\r\nimport { MDBView, MDBCard, MDBCardBody } from \"mdbreact\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport useFetch from \"../hooks/useFetch\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default function IngresarFoto() {\r\n  const { handleSubmit, register, errors } = useForm();\r\n  const [data, loading, setUrl, reload, setReload] = useFetch(\r\n    \"https://somospsicope.com/api/galeriaDeFotos/optionsCategorias.php\"\r\n  );\r\n  const onSubmit = (data, e) => {\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"nombre\", data.nombre);\r\n    formData.append(\"categoria\", data.categoria);\r\n    formData.append(\"foto\", data.image[0]);\r\n\r\n    Swal.fire({\r\n      title: \"Subiendo Foto ...\",\r\n      onBeforeOpen() {\r\n        Swal.showLoading();\r\n      },\r\n      onAfterClose() {\r\n        Swal.hideLoading();\r\n      },\r\n      allowOutsideClick: false,\r\n      allowEscapeKey: false,\r\n      allowEnterKey: false,\r\n      showConfirmButton: false,\r\n    });\r\n\r\n    fetch(\"https://somospsicope.com/api/galeriaDeFotos/subirFoto.php\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    })\r\n      .then((response) => response.json())\r\n      .catch((error) => {\r\n        Swal.fire(\"Error!\", error, \"error\");\r\n      })\r\n      .then(({ result, message }) => {\r\n        if (result) {\r\n          Swal.fire(\"Correcto!\", message, \"success\");\r\n          window.location.reload();\r\n        } else {\r\n          Swal.fire(\"Error!\", message, \"error\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MDBCard className=\"mt-5\">\r\n        <MDBView className=\"gradient-card-header blue darken-2\">\r\n          <h4 className=\"h4-responsive text-white\">Ingresar foto</h4>\r\n        </MDBView>\r\n        <MDBCardBody>\r\n          <form className=\"qr-form\" onSubmit={handleSubmit(onSubmit)}>\r\n            <label htmlFor=\"nombre\">Nombre</label>\r\n            <input\r\n              name=\"nombre\"\r\n              className=\"form-control\"\r\n              ref={register({\r\n                required: \"Requerido\",\r\n              })}\r\n            />\r\n            <span>{errors.nombre && errors.nombre.message}</span>\r\n            <label htmlFor=\"description\">Categoría</label>\r\n            <select\r\n              name=\"categoria\"\r\n              className=\"form-control\"\r\n              ref={register({\r\n                required: \"Requerido\",\r\n              })}\r\n            >\r\n              {loading ? (\r\n                <option value=\"\">Cargando categorias..</option>\r\n              ) : (\r\n                data.map(({ id, name }) => (\r\n                  <option key={id} value={id}>\r\n                    {name}{\" \"}\r\n                  </option>\r\n                ))\r\n              )}\r\n            </select>\r\n            <span>{errors.categoria && errors.categoria.message}</span>\r\n            <label htmlFor=\"image\">Imagen</label>\r\n            <input\r\n              name=\"image\"\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              ref={register({\r\n                required: \"Requerido\",\r\n              })}\r\n            />\r\n            <span>{errors.image && errors.image.message}</span>\r\n\r\n            <div className=\"text-center\">\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Ingresar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { MDBView, MDBCard, MDBCardBody } from \"mdbreact\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default function IngresarCategoriaDeFoto() {\r\n  const { handleSubmit, register, errors } = useForm();\r\n  const onSubmit = (data) => {\r\n\r\n    let formData = new FormData();\r\n\r\n    formData.append('nombreDeCategoria', data.categoria)\r\n\r\n    fetch('https://somospsicope.com/api/galeriaDeFotos/ingresarCategoriaDeFoto.php', {\r\n        method: 'POST',\r\n        body: formData\r\n    })\r\n        .then(response => response.json())\r\n        .catch(error => {\r\n            Swal.fire('Error!', error, 'error')\r\n        })\r\n        .then(({ result, message }) => {\r\n            if (result) {\r\n                Swal.fire('Correcto!', message, 'success');\r\n                window.location.reload();\r\n            } else {\r\n                Swal.fire('Error!', message, 'error');\r\n            }\r\n        });\r\n\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MDBCard className=\"mt-5\">\r\n        <MDBView className=\"gradient-card-header blue darken-2\">\r\n          <h4 className=\"h4-responsive text-white\">\r\n            Ingresar categoría de foto\r\n          </h4>\r\n        </MDBView>\r\n        <MDBCardBody>\r\n          <form className=\"qr-form\" onSubmit={handleSubmit(onSubmit)}>\r\n            <label htmlFor=\"name\">Nombre Categoría</label>\r\n            <input\r\n              name=\"categoria\"\r\n              className=\"form-control\"\r\n              ref={register({\r\n                required: \"Requerido\",\r\n              })}\r\n            />\r\n            <span>{errors.categoria && errors.categoria.message}</span>\r\n            <div className=\"text-center\">\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Ingresar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import Swal from 'sweetalert2';\r\n\r\nexport const eliminarFotoHandler = (id) => {\r\n\r\n    return new Promise ((resolve, reject) => {\r\n\r\n        let formData = new FormData();\r\n    \r\n        formData.append('id', id);\r\n    \r\n        fetch('https://somospsicope.com/api/galeriaDeFotos/eliminarFoto.php', {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => {\r\n                Swal.fire('Error!', error, 'error')\r\n                reject(false);\r\n            })\r\n            .then(({ result, message }) => {\r\n                if (result) {\r\n                    Swal.fire('Correcto!', message, 'success');\r\n                    resolve(true);\r\n                } else {\r\n                    Swal.fire('Error!', message, 'error');\r\n                }\r\n            });\r\n    })\r\n\r\n\r\n}","import React from 'react'\nimport { MDBRow, MDBCol, MDBView, MDBCard, MDBCardBody } from 'mdbreact';\nimport DataTable from '../DataTable';\nimport IngresarFoto from '../IngresarFoto';\nimport IngresarCategoriaDeFoto from '../IngresarCategoriaDeFoto';\nimport { eliminarFotoHandler } from './../../handler/eliminarFotoHandler';\n\nconst GaleriaDeFotos =  () => {\n\n const [refreshID, setRefreshID] = React.useState(0);\n const thead = new Array(`Url`, `Nombre`, `Categoría`, `Eliminar`);\n\n window.eliminarFoto = (id) => {\n  eliminarFotoHandler(id).then((res) => {\n    if (res) {\n      setRefreshID(refreshID + 1);\n    }\n  });\n};\n\n  return (\n    <>\n      <MDBRow>\n      <MDBCol md=\"4\">\n        <IngresarFoto/>\n      </MDBCol>\n      <MDBCol md=\"4\">\n        <IngresarCategoriaDeFoto/>\n      </MDBCol>\n      <MDBCol md=\"12\">\n        <MDBCard className=\"mt-5\">\n          <MDBView className=\"gradient-card-header blue darken-2\">\n            <h4 className=\"h4-responsive text-white\">Galería de Fotos</h4>\n          </MDBView>\n          <MDBCardBody>\n            <DataTable\n            url=\"https://somospsicope.com/api/galeriaDeFotos/listarFotos.php\"\n            thead={thead}\n            tableId=\"GaleriaDeFotosTable\"\n            refreshID={refreshID}\n            />\n          </MDBCardBody>\n        </MDBCard>\n      </MDBCol>\n    </MDBRow>\n    </>\n  )\n}\n\nexport default GaleriaDeFotos;","import React from 'react'\nimport { MDBCol, MDBRow } from 'mdbreact';\n\n\nconst NotFoundPage =  () => {\n  return (\n    <React.Fragment>\n      <div className=\"full\">\n        <MDBRow className=\"bad-gateway-row\">\n          <MDBCol md=\"8\">\n            <img alt=\"Error 404\" className=\"img-fluid\" hieght=\"20px\" src=\"https://demo.somospsicope.com/images/logo.png\" />\n            <h2 className=\"h2-responsive mt-3 mb-2\">404. That's an error.</h2>\n            <h4>The requested URL was not found on this server.</h4>\n          </MDBCol>\n          <MDBCol md=\"4\">\n            <img alt=\"Error 404\" className=\"img-fluid\" src=\"https://mdbootstrap.com/img/Others/grafika404-bf.png\"/>\n          </MDBCol>\n        </MDBRow>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default NotFoundPage;","import React from \"react\";\n/* import Routes from \"../src/components/Routes\"; */\nimport TopNavigation from \"./components/topNavigation\";\nimport SideNavigation from \"./components/sideNavigation\";\nimport Footer from \"./components/Footer\";\nimport {\n  BrowserRouter,\n  Route,\n  Switch\n} from \"react-router-dom\";\nimport DashboardPage from \"./components/pages/DashboardPage\";\nimport LogInPage from \"./components/pages/LogInPage\";\nimport Textos from \"./components/pages/Textos\";\nimport Productos from \"./components/pages/Productos\";\nimport GaleriaDeFotos from \"./components/pages/GaleriaDeFotos\";\nimport NotFoundPage from \"./components/pages/NotFoundPage\";\nimport \"./index.css\";\nimport \"./App.scss\";\n/* import history from \"./utils/history/\" */\n\nexport default function App() {\n\n  return (\n    <BrowserRouter /* history={history} */>\n\n      <div className=\"flexible-content\">\n        <TopNavigation />\n        <SideNavigation />\n        <main id=\"content\" className=\"p-5\">\n        <Switch>\n            <Route path=\"/admin\" exact component={LogInPage} />\n            <Route path=\"/admin/capacitaciones\" component={DashboardPage} />\n            <Route path=\"/admin/textos\" component={Textos} />\n            <Route path=\"/admin/productos\" component={Productos} />\n            <Route path=\"/admin/galeria-de-fotos\" component={GaleriaDeFotos} />\n            <Route /* path=\"/admin/404\" */ component={NotFoundPage} />\n          </Switch>\n        </main>\n        <br />\n        <br />\n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}